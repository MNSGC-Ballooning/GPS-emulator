//#include <Adafruit_GPS.h>
#include <SoftwareSerial.h>

/*this is the code for the communicating arduino that will send signals to the other microcontroller
 * acting as a fake GPS
 * writtten by: Simon Peterson
 * date: 6/13/17
 */
 #define MAXMESSAGE 120
 #define JUMP "jump"
unsigned long Time = 50000;    //Time in seconds
float latf = 4458.843;   //DDMM.MMMM
char latCard = 'N';
char longiCard = 'W';
//the alt array is global to prevent memory allocation overlap in NMEA function
char alt[15];
float longf = 07400.4184;  //DDDMM.MMMM
float altf = 300;         //Altitude in meters. 300 is pretty standard starting place
char command[MAXMESSAGE];
char Serialcom[20];
char GPGGA[6] = "$GPGGA";
char GPRMC[6] = "$GPRMC";
SoftwareSerial GPSserial(7,8); //Rx, Tx
boolean recvd = false;
unsigned long Timer = 0;

double altArr[] = {1084.6,1131.9,1186,1238.2,1363.2,1426.5,1485.6,1546.6,1608.9,1671.3,1738.2,1804.8,1864.2,1915,1973.4,2040,2107.6,2177.8,2250.7,2319.2,2389.4,2465.6,2524.6,2583.3,2650.6,2715.2,2774.9,2841.2,2908.5,2976.7,3040,3104.3,3172.2,3238.2,3308.4,3375.3,3451.1,3526.2,3593.2,3652.9,3720.8,3791,3857.6,3926.2,3994.4,4060.7,4129.6,4200.1,4272,4342.2,4412.1,4477.7,4543.3,4620.1,4696.9,4770.7,4837.6,4909.4,4981.3,5053.8,5126.6,5203.1,5281.5,5361.9,5439.3,5507.5,5582.7,5660.1,5733.9,5796.3,5865.2,5938,5999.3,6068.9,6141.4,6207.7,6274.6,6344.5,6413.4,6485.2,6554.8,6617.1,6684.4,6756.9,6820.9,6885.8,6956.4,7028.9,7103.7,7180.4,7247.4,7315.9,7379.9,7447.2,7521.7,7592.5,7658.5,7719.5,7773.6,7835.6,7902.9,7968.8,8037.1,8098.8,8150.3,8207.7,8270.7,8332.3,8401.9,8478.3,8553.1,8612.2,8677.5,8752.6,8831.4,8909.4,8985.9,9057.1,9121.4,9194.9,9270.7,9340.9,9407.8,9476.4,9544,9615.2,9692.3,9765.4,9830.1,9896,9963.9,10035.1,10108.3,10181.4,10245.7,10311.7,10387.5,10458.3,10515.1,10584.3,10661.4,10741.8,10812.7,10862.5,10926.8,10998,11075.8,11141.4,11199.1,11264.1,11337.6,11411.1,11469.2,11524.6,11587.6,11658.8,11722.8,11790,11861.5,11920.6,11972.1,12036.4,12107,12167.7,12230.3,12299.9,12369.4,12442.6,12511.2,12574.5,12644.4,12719.5,12792,12864.8,12938.3,13013.5,13090.6,13160.4,13225.7,13294.3,13357.6,13423.2,13496.4,13567.6,13641.4,13710,13768.4,13826.1,13893.4,13968.2,14045.9,14113.5,14174.5,14239.5,14316.3,14397.6,14469.5,14537.7,14612.9,14687.3,14759.8,14822.2,14885.8,14950.5,15015.1,15078.7,15133.9,15200.1,15269.7,15329.4,15392.1,15455.7,15515.1,15571.5,15634.8,15705.7,15772,15839.9,15899,15956.7,16025.6,16094.5,16158.1,16223.8,16287.1,16356,16434.4,16517.1,16603.7,16689,16763.8,16833.3,16900.3,16967.5,17038.1,17107.3,17174.9,17243.1,17313.3,17386.2,17445.9,17509.5,17579.1,17644,17710.6,17777.9,17850.1,17927.8,18005.9,18068.6,18131.6,18199.8,18267.7,18336.3,18411.1,18481,18538.4,18596.5,18660.1,18726.1,18792.7,18852,18916.7,18986.5,19049.2,19114.8,19186,19243.8,19295.6,19363.8,19435.4,19499.3,19565.6,19630.9,19689.6,19753.9,19817.3,19883.9,19954.1,20023.9,20090.6,20153.2,20222.4,20294.9,20361.9,20426.2,20496.4,20573.5,20638.1,20680.8,20739.5,20813,20879.6,20945.5,21018,21096.5,21174.2,21234.3,21302.8,21381.9,21462.9,21544.9,21626.6,21685.7,21748,21816.6,21890.4,21955.7,22021.7,22093.8,22164.7,22229.7,22294.6,22344.2,22389.4,22446.8,22520.7,22594.2,22664.4,22730,22777.2,22820.5,22866.1,22930.8,23011.8,23082.3,23141.1,23213.9,23284.8,23360.2,23443.2,23519.7,23569.9,23624.7,23690.9,23760.2,23828.4,23902.6,23965.6,24032.2,24108.9,24181.8,24248,24311,24393,24476.1,24570.2,24653.2,24735.9,24798.9,24870.4,24943.6,24994.1,25035.1,25076.4,25114.8,25154.9,25190.3,25237.5,25289.4,25341.2,25398,25466.9,25539,25613.5,25680.4,25748,25821.8,25889.4,25950.5,26015.1,26085.3,26148.9,26224.1,26294.9,26361.6,26427.8,26495.1,26562.3,26621.7,26621.7,26621.7,26825.1,26877.6,26927.8,26927.8,27050.2,27115.8,27183.7,27183.7,27322.2,27375.7,27444.9,27499.3,27559.4,27625.3,27692.6,27738.8,27805.8,27843.5,27843.5,27979,28058.1,28108.9,28164.4,28225.1,28269.7,28331,28331,28424.2,28472.1,28472.1,28588.9,28639.1,28691.9,28706.7,28706.7,28805.4,28851.1,28899.9,28938.3,28976.7,29014.8,29037.7,29103.7,29155.8,29206.4,29257.2,29326.4,29389.4,29445.5,29502.6,29561.4,29620.7,29675.2,29715.6,29794.9,29855.6,29912.1,29967.5,30020.3,30020.3,30130.2,30204.1,30268,30326.4,30379.6,30436,30492.8,30550.9,30607.3,30665.4,30722.1,30776.2,30828.1,30883.5,30940,30995.4,31048.9,31108.9,31172.9,31232,31297.2,31367.5,31431.4,31501,31568.9,31638.8,31714.6,31765.1,31843.8,31906.8,31968.8,32043.3,32097.1,32097.1,32245.7,32298.9,32360.9,32427.8,32454.4,32523.9,32583.7,32646.7,32708.3,32708.3,32843.2,32894.7,32968.2,33022.3,33070.5,33119.8,33171.6,33227,33282.2,33338.3,33398.9,33451.4,33510.2,33572.5,33633.5,33695.2,33755.6,33816.3,33876.3,33936.7,33997.4,34066.6,34137.1,34205.7,34272.3,34349.1,34422.2,34493.4,34564,34626.6,34690.9,34758.9,34847.4,34925.5,35014.8,35104,35186,35263.1,35336.6,35408.5,35479,35549.9,35614.5,35678.5,35740.8,35805.1,35865.8,35924.5,35984.3,36038.4,36093.5,36144.7,36196.5,36248.4,36297.2,36348.4,36401.2,36455.7,36511.5,36568.9,36627.6,36682.1,36736.2,36780.2,36822.8,36866.8,36911.1,36957,37003.9,37051.2,37101.1,37149.9,37200.1,37250,37298.6,37349.1,37400.9,37447.2,37496.1,37540,37582.4,37623,37662.4,37707.4,37752.6,37797.2,37842.8,37887.5,37933.4,37982.6,38030.8,38078.7,38127,38172.9,38216.2,38259.2,38304.1,38345.5,38384.2,38428.8,38472.8,38512.5,38555.8,38604.3,38651.2,38698.5,38747.4,38791.3,38834.3,38871.4,38910.4,38948.5,38989.2,39030.8,39075.1,39118.1,39158.8,39199.5,39245.4,39289.7,39333.3,39373,39415.4,39454.7,39494.1,39536.4,39575.5,39618.4,39662.4};
int arrLength = sizeof(altArr)/sizeof(altArr[0]);

void setup() {
  Serial.begin(9600);
  GPSserial.begin(9600); //for ublox GPS modules. Varies by model.
}

void loop() {
  readCommand();
  //if(recvd){
    Serial.println(String(command));
    //if(String(command)==PMTK_SET_NMEA_UPDATE_1HZ){
      while(altf<31000){
         readSerial();
         if(millis()-Timer>1000){
            sendGGA(GPGGA, 6);
            sendRMC(GPRMC, 6);
            Serial.println(String(altf));
            Time++;
            altf+=5;
            Timer = millis();
          }
      }
      while(altf>0){
        readSerial();
        if(millis()-Timer>1000){
            sendGGA(GPGGA, 6);
            sendRMC(GPRMC, 6);
            Serial.println(String(altf));
            Timer = millis();
            Time++;
            altf-=20;
        }
      }
    //}
//    else{
//      Serial.print("not set");
//    }
//    recvd = false;
  //}
  /*sendGGA(GPGGA, 6);
  sendRMC(GPRMC, 6);
  Time++;
  altf+=1;*/
}
